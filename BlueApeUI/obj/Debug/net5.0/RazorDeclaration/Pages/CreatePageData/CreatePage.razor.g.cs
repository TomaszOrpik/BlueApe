// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlueApeUI.Pages.CreatePageData
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI.Models.Requests;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI.Models.Responses;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI.Contracts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI.Providers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\_Imports.razor"
using BlueApeUI.Utilities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\Pages\CreatePageData\CreatePage.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\Pages\CreatePageData\CreatePage.razor"
using Blazored.TextEditor;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/page-editor")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/page-editor/{Title}/{PageName}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/post-editor")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/post-editor/{Title}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/post-editor/{Title}/{PageName}")]
    public partial class CreatePage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 153 "C:\Users\sycho\OneDrive\Desktop\GitHub\BlueApe\BlueApeUI\Pages\CreatePageData\CreatePage.razor"
       
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string PageName { get; set; }

    private BlogSettings blogModel = new BlogSettings("", "", "", "", "", "",
                                     new List<string>(), new List<string>(), "", "", "");
    private BlogData data;
    Page model = new Page
    (
        "Your first post",
        "./Assets/bg-5example.jpg",
        new string[2] { "FirstPost", "TestPost" },
        "01/01/2021",
        "Here is example post to learn whole structure...",
        Placeholders.dummyText
    );
    BlazoredTextEditor QuillHtml;
    private string errorMessage = string.Empty;
    Models.AlertMessageTypes errorMessageType = Models.AlertMessageTypes.Success;

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var blogResult = await _blogsRepo.getBlogData(Title);
        data = JsonConvert.DeserializeObject<BlogData>(blogResult.content);
        List<string> currentPages = new List<string>();
        foreach (PageData page in data.BlogDocument.Pages) currentPages.Add(page.Title);
        blogModel = new BlogSettings
        (
            data.BlogDocument.BlogDetails.Title,
            data.BlogDocument.BlogDetails.LogoUrl,
            data.BlogDocument.BlogDetails.Description,
            data.BlogDocument.BlogDetails.PrimaryColor,
            data.BlogDocument.BlogDetails.SecondaryColor,
            data.BlogDocument.BlogDetails.BackgroundColor,
            data.BlogDocument.Categories.ToList(),
            currentPages.ToList(),
            data.BlogDocument.BlogDetails.FacebookLink,
            data.BlogDocument.BlogDetails.InstagramLink,
            data.BlogDocument.BlogDetails.TwitterLink
        );
        if (!string.IsNullOrEmpty(PageName))
        {
            bool isPost = this.CheckIfIsPost();
            ResponseModel result;
            if (isPost) result = await _blogsRepo.getPost(Title, PageName);
            else result = await _blogsRepo.getPage(Title, PageName);
            if (result.isSuccess)
            {
                PageData body = JsonConvert.DeserializeObject<PageData>(result.content);
                model = new Page
                (
                    body.Title,
                    body.ImageUrl,
                    body.Categories,
                    body.Date,
                    body.Intro,
                    body.Content
                );
                await this.QuillHtml.LoadHTMLContent(body.Content);
                StateHasChanged();
            }
            else
            {
                errorMessage = result.message;
                errorMessageType = Models.AlertMessageTypes.Error;
            }
        }
    }
    private async Task onDeleteClick()
    {
        bool isPost = this.CheckIfIsPost();
        ResponseModel response;
        if (isPost) response = await _blogsRepo.deletePost(Title, model.title);
        else response = await _blogsRepo.deletePage(Title, model.title);
        if (!response.isSuccess)
        {
            errorMessage = response.message;
            errorMessageType = Models.AlertMessageTypes.Error;
        }
        else
        {
            string[] url = model.imageUrl.Split('/');
            try
            {
                await _fileRepo.DeleteImage(url[url.Length - 1]);
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            finally
            {
                _navMan.NavigateTo($"/blog-editor/all/{blogModel.title}");
            }
        }
    }
    private async Task formSubmit()
    {
        bool isPost = this.CheckIfIsPost();
        string content = await this.QuillHtml.GetHTML();
        PageData pageData = new PageData
        {
            Title = model.title,
            ImageUrl = model.imageUrl,
            Categories = model.categories,
            Date = model.date,
            Intro = model.intro,
            Content = content
        };
        var postsList = data.BlogDocument.Posts.ToList();
        var pagesList = data.BlogDocument.Pages.ToList();

        if (string.IsNullOrEmpty(PageName))
        {
            postsList.Add(pageData);
            data.BlogDocument.Posts = postsList.ToArray();

            var response = await _blogsRepo.addPost(data);
            if (!response.isSuccess)
            {
                errorMessage = response.message;
                errorMessageType = Models.AlertMessageTypes.Error;
            }
            else _navMan.NavigateTo($"/blog-editor/all/{blogModel.title}");
        }
        else
        {
            if (isPost)
            {
                int index = postsList.FindIndex(el => el.Title == model.title);
                postsList[index] = pageData;
                data.BlogDocument.Posts = postsList.ToArray();
                var response = await _blogsRepo.updatePost(data);
                if (!response.isSuccess)
                {
                    errorMessage = response.message;
                    errorMessageType = Models.AlertMessageTypes.Error;
                }
                else _navMan.NavigateTo($"/blog-editor/all/{blogModel.title}");
            }
            else
            {
                int pageIndex = pagesList.FindIndex(el => el.Title == model.title);
                pagesList[pageIndex] = pageData;
                data.BlogDocument.Pages = pagesList.ToArray();
                var response = await _blogsRepo.updatePost(data);
                if (!response.isSuccess)
                {
                    errorMessage = response.message;
                    errorMessageType = Models.AlertMessageTypes.Error;
                }
                else _navMan.NavigateTo($"/blog-editor/all/{blogModel.title}");
            }
        }
    }
    private async Task pageImageSend(InputFileChangeEventArgs e)
    {
        var maxAllowedFiles = 1;
        var format = "image/jpg";
        var file = e.GetMultipleFiles(maxAllowedFiles)[0];
        if (file.ContentType != format)
        {
            errorMessage = "File isn't in jpg format";
            errorMessageType = Models.AlertMessageTypes.Warning;
            return;
        }
        var result = await _fileRepo.UploadImage(e.GetMultipleFiles(maxAllowedFiles)[0], format);
        if (result.isSuccess)
        {
            errorMessage = result.message;
            errorMessageType = Models.AlertMessageTypes.Success;
            model.imageUrl = result.content;
            return;
        }
        else
        {
            errorMessage = result.message;
            errorMessageType = Models.AlertMessageTypes.Error;
            return;
        }
    }
    private async void ValidatePageTitle(string value)
    {
        var result = await _blogsRepo.lookForPost(blogModel.title, value);
        if (result.isSuccess)
        {
            if (result.content == "false" || string.IsNullOrWhiteSpace(value))
            {
                errorMessage = "Name Taken";
                errorMessageType = Models.AlertMessageTypes.Warning;
                return;
            }
            else
            {
                errorMessage = "Name valid";
                errorMessageType = Models.AlertMessageTypes.Success;
                return;
            }
        }
        else
        {
            errorMessage = result.message;
            errorMessageType = Models.AlertMessageTypes.Error;
            return;
        }
    }
    private void categoriesChanged(string value)
    {
        List<string> categories = value.Split(",").ToList();
        this.model.categories = categories.ToArray();
    }

    private bool CheckIfIsPost()
    {
        string[] uri = _navMan.Uri.Split('/');
        if (uri[3] == "page-editor") return false;
        else return true;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager _navMan { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBlogsManagerRepository _blogsRepo { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileManagerRepository _fileRepo { get; set; }
    }
}
#pragma warning restore 1591
